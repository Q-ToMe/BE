# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle


name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
          
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
 

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      env:
        EC2_SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.SERVER_USERNAME }}
      run: |
        # SSH Key 설정
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "$SERVER_USERNAME" >> ~/.ssh/known_hosts
        
        # JAR 파일 SCP로 전송
        scp build/libs/*.jar ubuntu@$SERVER_USERNAME:~/
        
        # EC2에서 스프링부트 애플리케이션 실행
        ssh ubuntu@$SERVER_USERNAME << EOF
          pgrep java | xargs kill -9
          nohup java -jar ~/*.jar > log.txt 2>&1 &
        EOF



          
    # steps:
    #   - name: Setup SSH
    #     uses: webfactory/ssh-agent@v0.5.4
    #     with:
    #       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    #   - name: Add remote server to known hosts
    #     run: |
    #       mkdir -p ~/.ssh
    #       ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
    #   - name: SCP transfer
    #     run: scp *.jar chs98412@${{ secrets.SERVER_IP }}:~/cicd
    #   - name: Execute remote commands
    #     run: |
    #       ssh -v chs98412@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp || true"
    #       ssh -v chs98412@${{ secrets.SERVER_IP }} "sudo nohup /usr/bin/java -jar ~/cicd/*.jar  > ~/cicd/nohup.log 2>&1 &"
